//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_Selling_Permission_Customer", "Customer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Customer), "Selling_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Selling_Permission), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Repository_Factory", "Factory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project_Entity_Framework_V01.Factory), "Repository", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Repository), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Repo_Prod_Product", "Product", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Product), "Repo_Prod", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Repo_Prod), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Selling_Permission_Product", "Product", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Product), "Selling_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Selling_Permission), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Supply_Permission_Product", "Product", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Product), "Supply_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Supply_Permission), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Repo_Prod_Repository", "Repository", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Repository), "Repo_Prod", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Repo_Prod), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Selling_Permission_Repository", "Repository", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Repository), "Selling_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Selling_Permission), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Supply_Permission_Repository", "Repository", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Repository), "Supply_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Supply_Permission), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Supply_Permission_Supplier", "Supplier", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(Project_Entity_Framework_V01.Supplier), "Supply_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project_Entity_Framework_V01.Supply_Permission), true)]

#endregion

namespace Project_Entity_Framework_V01
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ERP_SystemEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ERP_SystemEntities object using the connection string found in the 'ERP_SystemEntities' section of the application configuration file.
        /// </summary>
        public ERP_SystemEntities() : base("name=ERP_SystemEntities", "ERP_SystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ERP_SystemEntities object.
        /// </summary>
        public ERP_SystemEntities(string connectionString) : base(connectionString, "ERP_SystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ERP_SystemEntities object.
        /// </summary>
        public ERP_SystemEntities(EntityConnection connection) : base(connection, "ERP_SystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Factory> Factories
        {
            get
            {
                if ((_Factories == null))
                {
                    _Factories = base.CreateObjectSet<Factory>("Factories");
                }
                return _Factories;
            }
        }
        private ObjectSet<Factory> _Factories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Repo_Prod> Repo_Prod
        {
            get
            {
                if ((_Repo_Prod == null))
                {
                    _Repo_Prod = base.CreateObjectSet<Repo_Prod>("Repo_Prod");
                }
                return _Repo_Prod;
            }
        }
        private ObjectSet<Repo_Prod> _Repo_Prod;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Repository> Repositories
        {
            get
            {
                if ((_Repositories == null))
                {
                    _Repositories = base.CreateObjectSet<Repository>("Repositories");
                }
                return _Repositories;
            }
        }
        private ObjectSet<Repository> _Repositories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Selling_Permission> Selling_Permissions
        {
            get
            {
                if ((_Selling_Permissions == null))
                {
                    _Selling_Permissions = base.CreateObjectSet<Selling_Permission>("Selling_Permissions");
                }
                return _Selling_Permissions;
            }
        }
        private ObjectSet<Selling_Permission> _Selling_Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supply_Permission> Supply_Permissions
        {
            get
            {
                if ((_Supply_Permissions == null))
                {
                    _Supply_Permissions = base.CreateObjectSet<Supply_Permission>("Supply_Permissions");
                }
                return _Supply_Permissions;
            }
        }
        private ObjectSet<Supply_Permission> _Supply_Permissions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Factories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFactories(Factory factory)
        {
            base.AddObject("Factories", factory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Repo_Prod EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepo_Prod(Repo_Prod repo_Prod)
        {
            base.AddObject("Repo_Prod", repo_Prod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Repositories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepositories(Repository repository)
        {
            base.AddObject("Repositories", repository);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Selling_Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSelling_Permissions(Selling_Permission selling_Permission)
        {
            base.AddObject("Selling_Permissions", selling_Permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supply_Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupply_Permissions(Supply_Permission supply_Permission)
        {
            base.AddObject("Supply_Permissions", supply_Permission);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="mobile">Initial value of the Mobile property.</param>
        /// <param name="e_mail">Initial value of the E_mail property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.String name, global::System.String phone, global::System.String mobile, global::System.String e_mail)
        {
            Customer customer = new Customer();
            customer.ID = id;
            customer.Name = name;
            customer.Phone = phone;
            customer.Mobile = mobile;
            customer.E_mail = e_mail;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, false, "Mobile");
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String E_mail
        {
            get
            {
                return _E_mail;
            }
            set
            {
                OnE_mailChanging(value);
                ReportPropertyChanging("E_mail");
                _E_mail = StructuralObject.SetValidValue(value, false, "E_mail");
                ReportPropertyChanged("E_mail");
                OnE_mailChanged();
            }
        }
        private global::System.String _E_mail;
        partial void OnE_mailChanging(global::System.String value);
        partial void OnE_mailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Web
        {
            get
            {
                return _Web;
            }
            set
            {
                OnWebChanging(value);
                ReportPropertyChanging("Web");
                _Web = StructuralObject.SetValidValue(value, true, "Web");
                ReportPropertyChanged("Web");
                OnWebChanged();
            }
        }
        private global::System.String _Web;
        partial void OnWebChanging(global::System.String value);
        partial void OnWebChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Selling_Permission_Customer", "Selling_Permission")]
        public EntityCollection<Selling_Permission> Selling_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Selling_Permission>("Model.FK_Selling_Permission_Customer", "Selling_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Selling_Permission>("Model.FK_Selling_Permission_Customer", "Selling_Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Factory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Factory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Factory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Factory CreateFactory(global::System.Int32 id, global::System.String name, global::System.String address)
        {
            Factory factory = new Factory();
            factory.ID = id;
            factory.Name = name;
            factory.Address = address;
            return factory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Repository_Factory", "Repository")]
        public EntityCollection<Repository> Repositories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Repository>("Model.FK_Repository_Factory", "Repository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Repository>("Model.FK_Repository_Factory", "Repository", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            Product product = new Product();
            product.ID = id;
            product.Code = code;
            product.Name = name;
            return product;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit_1
        {
            get
            {
                return _Unit_1;
            }
            set
            {
                OnUnit_1Changing(value);
                ReportPropertyChanging("Unit_1");
                _Unit_1 = StructuralObject.SetValidValue(value, true, "Unit_1");
                ReportPropertyChanged("Unit_1");
                OnUnit_1Changed();
            }
        }
        private global::System.String _Unit_1;
        partial void OnUnit_1Changing(global::System.String value);
        partial void OnUnit_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit_2
        {
            get
            {
                return _Unit_2;
            }
            set
            {
                OnUnit_2Changing(value);
                ReportPropertyChanging("Unit_2");
                _Unit_2 = StructuralObject.SetValidValue(value, true, "Unit_2");
                ReportPropertyChanged("Unit_2");
                OnUnit_2Changed();
            }
        }
        private global::System.String _Unit_2;
        partial void OnUnit_2Changing(global::System.String value);
        partial void OnUnit_2Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Repo_Prod_Product", "Repo_Prod")]
        public EntityCollection<Repo_Prod> Repo_Prod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Repo_Prod>("Model.FK_Repo_Prod_Product", "Repo_Prod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Repo_Prod>("Model.FK_Repo_Prod_Product", "Repo_Prod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Selling_Permission_Product", "Selling_Permission")]
        public EntityCollection<Selling_Permission> Selling_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Selling_Permission>("Model.FK_Selling_Permission_Product", "Selling_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Selling_Permission>("Model.FK_Selling_Permission_Product", "Selling_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Supply_Permission_Product", "Supply_Permission")]
        public EntityCollection<Supply_Permission> Supply_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supply_Permission>("Model.FK_Supply_Permission_Product", "Supply_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supply_Permission>("Model.FK_Supply_Permission_Product", "Supply_Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Repo_Prod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Repo_Prod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Repo_Prod object.
        /// </summary>
        /// <param name="repo_ID">Initial value of the Repo_ID property.</param>
        /// <param name="prod_ID">Initial value of the Prod_ID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Repo_Prod CreateRepo_Prod(global::System.Int32 repo_ID, global::System.Int32 prod_ID, global::System.Int32 quantity)
        {
            Repo_Prod repo_Prod = new Repo_Prod();
            repo_Prod.Repo_ID = repo_ID;
            repo_Prod.Prod_ID = prod_ID;
            repo_Prod.Quantity = quantity;
            return repo_Prod;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Repo_ID
        {
            get
            {
                return _Repo_ID;
            }
            set
            {
                if (_Repo_ID != value)
                {
                    OnRepo_IDChanging(value);
                    ReportPropertyChanging("Repo_ID");
                    _Repo_ID = StructuralObject.SetValidValue(value, "Repo_ID");
                    ReportPropertyChanged("Repo_ID");
                    OnRepo_IDChanged();
                }
            }
        }
        private global::System.Int32 _Repo_ID;
        partial void OnRepo_IDChanging(global::System.Int32 value);
        partial void OnRepo_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Prod_ID
        {
            get
            {
                return _Prod_ID;
            }
            set
            {
                if (_Prod_ID != value)
                {
                    OnProd_IDChanging(value);
                    ReportPropertyChanging("Prod_ID");
                    _Prod_ID = StructuralObject.SetValidValue(value, "Prod_ID");
                    ReportPropertyChanged("Prod_ID");
                    OnProd_IDChanged();
                }
            }
        }
        private global::System.Int32 _Prod_ID;
        partial void OnProd_IDChanging(global::System.Int32 value);
        partial void OnProd_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Repo_Prod_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Repo_Prod_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Repo_Prod_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Repo_Prod_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Model.FK_Repo_Prod_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Repo_Prod_Repository", "Repository")]
        public Repository Repository
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Repo_Prod_Repository", "Repository").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Repo_Prod_Repository", "Repository").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Repository> RepositoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Repo_Prod_Repository", "Repository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Repository>("Model.FK_Repo_Prod_Repository", "Repository", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Repository")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Repository : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Repository object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="manager_Name">Initial value of the Manager_Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Repository CreateRepository(global::System.Int32 id, global::System.String name, global::System.String manager_Name, global::System.String address)
        {
            Repository repository = new Repository();
            repository.ID = id;
            repository.Name = name;
            repository.Manager_Name = manager_Name;
            repository.Address = address;
            return repository;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Manager_Name
        {
            get
            {
                return _Manager_Name;
            }
            set
            {
                OnManager_NameChanging(value);
                ReportPropertyChanging("Manager_Name");
                _Manager_Name = StructuralObject.SetValidValue(value, false, "Manager_Name");
                ReportPropertyChanged("Manager_Name");
                OnManager_NameChanged();
            }
        }
        private global::System.String _Manager_Name;
        partial void OnManager_NameChanging(global::System.String value);
        partial void OnManager_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Factory_ID
        {
            get
            {
                return _Factory_ID;
            }
            set
            {
                OnFactory_IDChanging(value);
                ReportPropertyChanging("Factory_ID");
                _Factory_ID = StructuralObject.SetValidValue(value, "Factory_ID");
                ReportPropertyChanged("Factory_ID");
                OnFactory_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Factory_ID;
        partial void OnFactory_IDChanging(Nullable<global::System.Int32> value);
        partial void OnFactory_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Repository_Factory", "Factory")]
        public Factory Factory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("Model.FK_Repository_Factory", "Factory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("Model.FK_Repository_Factory", "Factory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Factory> FactoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("Model.FK_Repository_Factory", "Factory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Factory>("Model.FK_Repository_Factory", "Factory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Repo_Prod_Repository", "Repo_Prod")]
        public EntityCollection<Repo_Prod> Repo_Prod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Repo_Prod>("Model.FK_Repo_Prod_Repository", "Repo_Prod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Repo_Prod>("Model.FK_Repo_Prod_Repository", "Repo_Prod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Selling_Permission_Repository", "Selling_Permission")]
        public EntityCollection<Selling_Permission> Selling_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Selling_Permission>("Model.FK_Selling_Permission_Repository", "Selling_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Selling_Permission>("Model.FK_Selling_Permission_Repository", "Selling_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Supply_Permission_Repository", "Supply_Permission")]
        public EntityCollection<Supply_Permission> Supply_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supply_Permission>("Model.FK_Supply_Permission_Repository", "Supply_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supply_Permission>("Model.FK_Supply_Permission_Repository", "Supply_Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Selling_Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Selling_Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Selling_Permission object.
        /// </summary>
        /// <param name="permission_Code">Initial value of the Permission_Code property.</param>
        /// <param name="permission_Date">Initial value of the Permission_Date property.</param>
        /// <param name="repository_ID">Initial value of the Repository_ID property.</param>
        /// <param name="customer_ID">Initial value of the Customer_ID property.</param>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Selling_Permission CreateSelling_Permission(global::System.String permission_Code, global::System.DateTime permission_Date, global::System.Int32 repository_ID, global::System.Int32 customer_ID, global::System.Int32 product_ID, global::System.Int32 quantity)
        {
            Selling_Permission selling_Permission = new Selling_Permission();
            selling_Permission.Permission_Code = permission_Code;
            selling_Permission.Permission_Date = permission_Date;
            selling_Permission.Repository_ID = repository_ID;
            selling_Permission.Customer_ID = customer_ID;
            selling_Permission.Product_ID = product_ID;
            selling_Permission.Quantity = quantity;
            return selling_Permission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Permission_Code
        {
            get
            {
                return _Permission_Code;
            }
            set
            {
                if (_Permission_Code != value)
                {
                    OnPermission_CodeChanging(value);
                    ReportPropertyChanging("Permission_Code");
                    _Permission_Code = StructuralObject.SetValidValue(value, false, "Permission_Code");
                    ReportPropertyChanged("Permission_Code");
                    OnPermission_CodeChanged();
                }
            }
        }
        private global::System.String _Permission_Code;
        partial void OnPermission_CodeChanging(global::System.String value);
        partial void OnPermission_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Permission_Date
        {
            get
            {
                return _Permission_Date;
            }
            set
            {
                OnPermission_DateChanging(value);
                ReportPropertyChanging("Permission_Date");
                _Permission_Date = StructuralObject.SetValidValue(value, "Permission_Date");
                ReportPropertyChanged("Permission_Date");
                OnPermission_DateChanged();
            }
        }
        private global::System.DateTime _Permission_Date;
        partial void OnPermission_DateChanging(global::System.DateTime value);
        partial void OnPermission_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Repository_ID
        {
            get
            {
                return _Repository_ID;
            }
            set
            {
                OnRepository_IDChanging(value);
                ReportPropertyChanging("Repository_ID");
                _Repository_ID = StructuralObject.SetValidValue(value, "Repository_ID");
                ReportPropertyChanged("Repository_ID");
                OnRepository_IDChanged();
            }
        }
        private global::System.Int32 _Repository_ID;
        partial void OnRepository_IDChanging(global::System.Int32 value);
        partial void OnRepository_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Customer_ID
        {
            get
            {
                return _Customer_ID;
            }
            set
            {
                OnCustomer_IDChanging(value);
                ReportPropertyChanging("Customer_ID");
                _Customer_ID = StructuralObject.SetValidValue(value, "Customer_ID");
                ReportPropertyChanged("Customer_ID");
                OnCustomer_IDChanged();
            }
        }
        private global::System.Int32 _Customer_ID;
        partial void OnCustomer_IDChanging(global::System.Int32 value);
        partial void OnCustomer_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                OnProduct_IDChanging(value);
                ReportPropertyChanging("Product_ID");
                _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                ReportPropertyChanged("Product_ID");
                OnProduct_IDChanged();
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Selling_Permission_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("Model.FK_Selling_Permission_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("Model.FK_Selling_Permission_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("Model.FK_Selling_Permission_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("Model.FK_Selling_Permission_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Selling_Permission_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Selling_Permission_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Selling_Permission_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Selling_Permission_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Model.FK_Selling_Permission_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Selling_Permission_Repository", "Repository")]
        public Repository Repository
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Selling_Permission_Repository", "Repository").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Selling_Permission_Repository", "Repository").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Repository> RepositoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Selling_Permission_Repository", "Repository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Repository>("Model.FK_Selling_Permission_Repository", "Repository", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="mobile">Initial value of the Mobile property.</param>
        /// <param name="e_mail">Initial value of the E_mail property.</param>
        public static Supplier CreateSupplier(global::System.Int32 id, global::System.String name, global::System.String phone, global::System.String mobile, global::System.String e_mail)
        {
            Supplier supplier = new Supplier();
            supplier.ID = id;
            supplier.Name = name;
            supplier.Phone = phone;
            supplier.Mobile = mobile;
            supplier.E_mail = e_mail;
            return supplier;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, false, "Mobile");
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String E_mail
        {
            get
            {
                return _E_mail;
            }
            set
            {
                OnE_mailChanging(value);
                ReportPropertyChanging("E_mail");
                _E_mail = StructuralObject.SetValidValue(value, false, "E_mail");
                ReportPropertyChanged("E_mail");
                OnE_mailChanged();
            }
        }
        private global::System.String _E_mail;
        partial void OnE_mailChanging(global::System.String value);
        partial void OnE_mailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Web
        {
            get
            {
                return _Web;
            }
            set
            {
                OnWebChanging(value);
                ReportPropertyChanging("Web");
                _Web = StructuralObject.SetValidValue(value, true, "Web");
                ReportPropertyChanged("Web");
                OnWebChanged();
            }
        }
        private global::System.String _Web;
        partial void OnWebChanging(global::System.String value);
        partial void OnWebChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Supply_Permission_Supplier", "Supply_Permission")]
        public EntityCollection<Supply_Permission> Supply_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supply_Permission>("Model.FK_Supply_Permission_Supplier", "Supply_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supply_Permission>("Model.FK_Supply_Permission_Supplier", "Supply_Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Supply_Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supply_Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supply_Permission object.
        /// </summary>
        /// <param name="permission_Code">Initial value of the Permission_Code property.</param>
        /// <param name="permission_Date">Initial value of the Permission_Date property.</param>
        /// <param name="supplier_ID">Initial value of the Supplier_ID property.</param>
        /// <param name="repository_ID">Initial value of the Repository_ID property.</param>
        /// <param name="product_ID">Initial value of the Product_ID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="production_Date">Initial value of the Production_Date property.</param>
        /// <param name="expire_Date">Initial value of the Expire_Date property.</param>
        public static Supply_Permission CreateSupply_Permission(global::System.String permission_Code, global::System.DateTime permission_Date, global::System.Int32 supplier_ID, global::System.Int32 repository_ID, global::System.Int32 product_ID, global::System.Int32 quantity, global::System.DateTime production_Date, global::System.DateTime expire_Date)
        {
            Supply_Permission supply_Permission = new Supply_Permission();
            supply_Permission.Permission_Code = permission_Code;
            supply_Permission.Permission_Date = permission_Date;
            supply_Permission.Supplier_ID = supplier_ID;
            supply_Permission.Repository_ID = repository_ID;
            supply_Permission.Product_ID = product_ID;
            supply_Permission.Quantity = quantity;
            supply_Permission.Production_Date = production_Date;
            supply_Permission.Expire_Date = expire_Date;
            return supply_Permission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Permission_Code
        {
            get
            {
                return _Permission_Code;
            }
            set
            {
                if (_Permission_Code != value)
                {
                    OnPermission_CodeChanging(value);
                    ReportPropertyChanging("Permission_Code");
                    _Permission_Code = StructuralObject.SetValidValue(value, false, "Permission_Code");
                    ReportPropertyChanged("Permission_Code");
                    OnPermission_CodeChanged();
                }
            }
        }
        private global::System.String _Permission_Code;
        partial void OnPermission_CodeChanging(global::System.String value);
        partial void OnPermission_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Permission_Date
        {
            get
            {
                return _Permission_Date;
            }
            set
            {
                OnPermission_DateChanging(value);
                ReportPropertyChanging("Permission_Date");
                _Permission_Date = StructuralObject.SetValidValue(value, "Permission_Date");
                ReportPropertyChanged("Permission_Date");
                OnPermission_DateChanged();
            }
        }
        private global::System.DateTime _Permission_Date;
        partial void OnPermission_DateChanging(global::System.DateTime value);
        partial void OnPermission_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supplier_ID
        {
            get
            {
                return _Supplier_ID;
            }
            set
            {
                OnSupplier_IDChanging(value);
                ReportPropertyChanging("Supplier_ID");
                _Supplier_ID = StructuralObject.SetValidValue(value, "Supplier_ID");
                ReportPropertyChanged("Supplier_ID");
                OnSupplier_IDChanged();
            }
        }
        private global::System.Int32 _Supplier_ID;
        partial void OnSupplier_IDChanging(global::System.Int32 value);
        partial void OnSupplier_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Repository_ID
        {
            get
            {
                return _Repository_ID;
            }
            set
            {
                OnRepository_IDChanging(value);
                ReportPropertyChanging("Repository_ID");
                _Repository_ID = StructuralObject.SetValidValue(value, "Repository_ID");
                ReportPropertyChanged("Repository_ID");
                OnRepository_IDChanged();
            }
        }
        private global::System.Int32 _Repository_ID;
        partial void OnRepository_IDChanging(global::System.Int32 value);
        partial void OnRepository_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Product_ID
        {
            get
            {
                return _Product_ID;
            }
            set
            {
                OnProduct_IDChanging(value);
                ReportPropertyChanging("Product_ID");
                _Product_ID = StructuralObject.SetValidValue(value, "Product_ID");
                ReportPropertyChanged("Product_ID");
                OnProduct_IDChanged();
            }
        }
        private global::System.Int32 _Product_ID;
        partial void OnProduct_IDChanging(global::System.Int32 value);
        partial void OnProduct_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Production_Date
        {
            get
            {
                return _Production_Date;
            }
            set
            {
                OnProduction_DateChanging(value);
                ReportPropertyChanging("Production_Date");
                _Production_Date = StructuralObject.SetValidValue(value, "Production_Date");
                ReportPropertyChanged("Production_Date");
                OnProduction_DateChanged();
            }
        }
        private global::System.DateTime _Production_Date;
        partial void OnProduction_DateChanging(global::System.DateTime value);
        partial void OnProduction_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Expire_Date
        {
            get
            {
                return _Expire_Date;
            }
            set
            {
                OnExpire_DateChanging(value);
                ReportPropertyChanging("Expire_Date");
                _Expire_Date = StructuralObject.SetValidValue(value, "Expire_Date");
                ReportPropertyChanged("Expire_Date");
                OnExpire_DateChanged();
            }
        }
        private global::System.DateTime _Expire_Date;
        partial void OnExpire_DateChanging(global::System.DateTime value);
        partial void OnExpire_DateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Supply_Permission_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Supply_Permission_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Supply_Permission_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("Model.FK_Supply_Permission_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("Model.FK_Supply_Permission_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Supply_Permission_Repository", "Repository")]
        public Repository Repository
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Supply_Permission_Repository", "Repository").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Supply_Permission_Repository", "Repository").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Repository> RepositoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Repository>("Model.FK_Supply_Permission_Repository", "Repository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Repository>("Model.FK_Supply_Permission_Repository", "Repository", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Supply_Permission_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("Model.FK_Supply_Permission_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("Model.FK_Supply_Permission_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("Model.FK_Supply_Permission_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("Model.FK_Supply_Permission_Supplier", "Supplier", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
